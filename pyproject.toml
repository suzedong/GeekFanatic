[tool.poetry]
name = "geek-fanatic"
version = "0.1.0"
description = "一个现代化的 Python GUI 应用程序模板"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "geek_fanatic", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.10"
PySide6 = "6.5.3"
PySide6-Addons = "6.5.3"
PySide6-Essentials = "6.5.3"
urllib3 = "1.26.15"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-qt = "^4.4.0"
black = "^24.1.1"
isort = "^5.13.2"
mypy = "^1.8.0"
pylint = "^3.0.3"
flake8 = "^7.0.0"
sphinx = "^7.2.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
exclude = [
    "src/geek_fanatic/resources/resources_rc.py"
]

[tool.pylint]
max-line-length = 88
disable = [
    "C0111",  # missing-docstring
    "R0903",  # too-few-public-methods
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.poetry.scripts]
geekfanatic = "geek_fanatic.__main__:main"
